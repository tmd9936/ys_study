ㅁ 디렉토리 (폴더)
- bin : 기본적인 명령어
- boot : 부트로더 디렉토리
- dev : 시스템 디바이스(장치파일)
- etc : 각종 설정 파일
- home : 사용자의 홈 디렉ㅌㅎ리
- lib 라니브러리 (커널모듈)
- media : 외부 저장소(cdroom, usb등)
- mnt 외부저장소 또는 파일시스템 마운트 포인트
- proc : 시스템 설정들의 가상파일시스템, 프로세스 정보
- root : 루트 사용자의 홈디렉토리
- sbin : 시스템(관리자) 명령어
- tmp : 임시저장소
- usr : 일반사용자들의 공통파일
- var : 시스템 운용중에 생성되는 임시데이터 저장소( 로그 파일들 기록)

run/crond.pid
프로세스 아이디

cd /var/log
$ last -f wtmp
: 로그인 이력 확인

ㅁ 압축 파일 보기 
- zcat (파일명)

ㅁ 로그파일 볼 때
: 일반 텍스트 파일은 cat 명령으로 내용확인 가능
: 바이너리로 저장된 로그 파일은 cat 명령으로 확인 불가
-- 바이너리 로그파일 보기 예 > last -f wtmp
   (wtmp : 로그인 정보가 기록된 파일, 바이너리로 저장됨.)
: 압출파일로 저장된 로그파일은 zcat 명령으로 확인 할 수 있음.

ㅁ find 명령어 
- find . -name "*.txt" : 현재 디렉토리에서부터 하위 디렉토리에 있는 모든 txt파일을 찾는다.
- find . -name "*.txt" -type f : 파일형식을 찾겠다고 명시함
- find . -size 5M : 파일사이즈가 5M인 파일 찾기
- find . -size +5M : 파일사이즈가 5M 이상인 파일 찾기
- find . -size -5M : 파일사이즈가 5M 이하인 파일 찾기
- find . -mtime +2 -a -mtime -5 -ls : 현재디렉토리에서 최근 2일에서 5일사이에 변경된 파일 찾기
			( -a : and, +2: 2일 또는 2일 이전 파일, -5: 오늘부터 5일전까지)

ㅁ 시간의 유형 (atime, mtime, ctime)
- Access(atime) : 파일에 최근 접근 시간(과거에는 read경우 시간이 변경됨었음)
- Modify(mtime) : 파일 내용의 변경시간
- Change(ctime) : 파일의 수정시간 (파일의 속성 등..., mtime을 포함한다고 보면됨) 

ㅁ stat
: 파일의 시간을 주로 확인할 때 사용

ㅁ ls 명령에서 시간확인
: ls -l : 기본값 (mtime)
: ls -l -u : atime
: ls -l -c : ctime


ㅁ find 명령어 고급기능
- find / -size 10M -ls 2> /dev/null : 오류 메세지들을 /dev/null에서 처리하여 없어진다.

find / -size 10M -exec ls -l {} \; 2> /dev/null

[문제1] 전체 파일준에 *.txt 파일을 찾아서 그파일안에 "HELP"가 들어있는 내용을 가져오세요
find / -name "*.txt" -exec grep -n hello {} \; 2> /dev/null

[문제2] /usr 부터 그 하위 디렉토리에서 사이즈가 50M 이상되는 파일들을 /tmp 디렉토리에 복사하세요. 그리고 ls 명령으로 확인하세요
find /usr -size +50M -exec cp {} /tmp \; 2> /dev/null
ls -l /tmp

ㅁ 필터링 (grep)
: 주로 파이프로 연결한 grep을 이용

- 파일 목록에서 특정단어 검색
-- ls -al | grep txt

- 로그파일에서 경고만 검색
-- cat /var/log/syslog | grep -i "warn" : i는 대소문자 구분없이

- ps x
-- 현재 실행중인 프로세스
-- PID : 프로세스 아이디

[문제] 현재 실행중인 프로세스중 /bin 디렉토리에서 실행중인 프로세스를 확인하세요.
단, 실행중인 grep 제외
ps x | grep "/bin" | grep -v "grep"

ㅁ 정렬 (sort)
: 파일의 내용을 특정 순서(옵션)로 정렬

- sort -k 2
-- 두 번째 필드로 정렬

- sort -k2n
-- 문자열로 인식후 정렬






































































